/* homework 4.47 B, bubble_sort.ys, Y86-64程序代码参考252页，图4.7。*/

# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

# Array of 4 elements
    .align 8
array:
    .quad 0x0000000000000003
    .quad 0x0000000000000001
    .quad 0x0000000000000004
array_last:
    .quad 0x0000000000000002

main:
    irmovq array, %rdi
    irmovq array_last, %rsi
    call bubble_sort
    ret

# void bubble_sort(long *data, long *data_last)
# data in %rdi, data_last in %rsi
bubble_sort:
    irmovq $8, %r8
    jmp test1
loop1:
    # i = data, i in %rax
    rrmovq %rdi, %rax
test2:
    # i < last
    rrmovq %rsi, %r9
    subq %rax, %r9
    jle update1
loop2:
    # long t = *(i+1)
    mrmovq 8(%rax), %r9
    mrmovq (%rax), %r10
    # *(i+1) < *i
    rrmovq %r9, %r11
    subq %r10, %r11
    jge update2
    rmmovq %r10, 8(%rax)
    rmmovq %r9, (%rax)
update2:
    # i++
    addq %r8, %rax
    jmp test2
update1:
    # last--
    subq %r8, %rsi
test1:
    # last > data
    rrmovq %rsi, %r9
    subq %rdi, %r9
    jg loop1
    ret

# Stack starts here and grows to lower addresses
    .pos 0x200
stack:
